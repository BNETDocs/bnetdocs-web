<?php

namespace BNETDocs\Views\Document;

use \DateTimeInterface;

class ViewPlain extends \BNETDocs\Views\Base\Plain
{
  public static function invoke(\BNETDocs\Interfaces\Model $model): void
  {
    if (!$model instanceof \BNETDocs\Models\Document\View)
    {
      throw new \BNETDocs\Exceptions\InvalidModelException($model);
    }

    $model->_responseHeaders['Content-Type'] = self::mimeType();
    if (!$model->document) return;

    $b = $model->document->getBrief(false);
    $e = $model->document->getEditedDateTime();
    $t = $model->document->getTitle();
    $u = $model->document->getUserId();

    printf("%s\n%s\n\n", $t, str_pad('', strlen($t), '='));
    printf("**Document #%d** created on `%s` by **User %s**", $model->document->getId(), $model->document->getCreatedDateTime()->format(DateTimeInterface::RFC2822), is_null($u) ? '*null*' : '#' . $u);
    if (!$e) echo ".\n"; else printf(" updated %d time(s) last on `%s`.\n", $model->document->getEditedCount(), $e->format(DateTimeInterface::RFC2822));
    printf("Text generated by **BNETDocs** on `%s`.\n", (new \DateTimeImmutable('now'))->format(DateTimeInterface::RFC2822));
    if (!empty($b)) printf("\n%s\n", $b);
    printf("\n----\n\n%s", $model->document->getContent(false));
  }
}
