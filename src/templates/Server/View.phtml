<?php /* vim: set colorcolumn= expandtab shiftwidth=2 softtabstop=2 tabstop=4 smarttab: */
namespace BNETDocs\Templates\Server;
use \BNETDocs\Libraries\Server;
use \CarlBennett\MVC\Libraries\Common;
use \CarlBennett\MVC\Libraries\Pair;
$title = 'Server Not Found';
$description = 'The requested server does not exist or could not be found.';
$server = $this->getContext()->server;
$server_id = $this->getContext()->server_id;
$server_type = $this->getContext()->server_type;
if (!$server)
{
  $server_user = null;
  $url = Common::relativeUrlToAbsolute(sprintf('/server/', rawurlencode($server_id)));
}
else
{
  $server_address = filter_var(sprintf('%s:%s', $server->getAddress(), $server->getPort()), FILTER_SANITIZE_FULL_SPECIAL_CHARS);
  $server_name = filter_var($server->getName(), FILTER_SANITIZE_FULL_SPECIAL_CHARS);

  $title = $server_name;
  $description = sprintf('The server details and status for %s', $server_name);
  $url = $server->getURI();
  $url_json = sprintf('%s.json', $url);
  $url_txt = sprintf('%s.txt', $url);

  $server_type = $server->getType();
  $server_type_label = filter_var($server_type->getLabel(), FILTER_SANITIZE_FULL_SPECIAL_CHARS);

  $server_user = $server->getUser();
  if (!$server_user)
  {
    $server_user_string = 'Anonymous';
  }
  else
  {
    $server_user_avatar = $server_user->getAvatarURI(22);
    $server_user_name = filter_var($server_user->getName(), FILTER_SANITIZE_FULL_SPECIAL_CHARS);
    $server_user_url = $server_user->getURI();
    $server_user_string = sprintf('<a href="%s"><img class="mr-2 rounded" src="%s"/>%s</a>', $server_user_url, $server_user_avatar, $server_user_name);
  }

  $server_status_bitmask = $server->getStatusBitmask();
  $server_status = (
    ($server_status_bitmask & Server::STATUS_ONLINE) ?
    '<span class="text-success">Online</span>' :
    '<span class="text-danger">Offline</span>'
  ) . (
    ($server_status_bitmask & Server::STATUS_DISABLED) ?
    ', <span class="text-danger">Disabled</span>' : ''
  );
}
$this->opengraph->attach(new Pair('type', 'article'));
$this->opengraph->attach(new Pair('url', $url));
require('./header.inc.phtml'); ?>
<div class="container">
<? if (!$server) { ?>
  <h1 class="text-danger"><?=filter_var($title, FILTER_SANITIZE_STRING)?></h1>
  <div class="alert alert-danger"><?=filter_var($description, FILTER_SANITIZE_STRING)?></div></div>
<? } else { ?>
  <span class="float-right">
    <a class="btn btn-sm btn-primary" href="<?=$url_json?>">JSON</a>
    <a class="btn btn-sm btn-primary" href="<?=$url_txt?>">TXT</a>
    <a class="btn btn-sm btn-primary" href="https://twitter.com/share?text=<?=urlencode($title)?>&amp;url=<?=urlencode($url)?>" rel="external" data-popup="1"><img src="<?=Common::relativeUrlToAbsolute('/a/social-twitter-24px.png')?>"/></a>
    <a class="btn btn-sm btn-primary" href="https://facebook.com/sharer/sharer.php?u=<?=urlencode($url)?>" rel="external" data-popup="1"><img src="<?=Common::relativeUrlToAbsolute('/a/social-facebook-24px.png')?>"/></a>
  </span>
  <h1><?=$title?></h1>
  <table class="table table-hover table-sm table-striped"><thead></thead><tbody>
    <tr><th class="text-right">Label</th><td><?=$server_name?></td></tr>
    <tr><th class="text-right">Address</th><td onclick="bnetdocs.fSelectText(this);"><code><?=$server_address?></td></tr>
    <tr><th class="text-right">Owner</th><td><?=$server_user_string?></td></tr>
    <tr><th class="text-right">Type</th><td><?=$server_type_label?></td></tr>
    <tr><th class="text-right">Current Status</th><td><?=$server_status?></td></tr>
  </tbody></table>
<? } ?>
</div>
<? require('./footer.inc.phtml'); ?>
