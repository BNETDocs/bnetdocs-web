<?php /* vim: set colorcolumn= expandtab shiftwidth=2 softtabstop=2 tabstop=4 smarttab: */
namespace BNETDocs\Templates\User;
use \BNETDocs\Libraries\Comment;
use \BNETDocs\Libraries\User;
use \CarlBennett\MVC\Libraries\Common;
use \CarlBennett\MVC\Libraries\Pair;
$active_user = $this->getContext()->active_user;
$comments = $this->getContext()->comments;
$contributions = $this->getContext()->contributions;
$documents = $this->getContext()->documents;
$news_posts = $this->getContext()->news_posts;
$packets = $this->getContext()->packets;
$servers = $this->getContext()->servers;
$sum_comments = $this->getContext()->sum_comments;
$sum_documents = $this->getContext()->sum_documents;
$sum_news_posts = $this->getContext()->sum_news_posts;
$sum_packets = $this->getContext()->sum_packets;
$sum_servers = $this->getContext()->sum_servers;
$user = $this->getContext()->user;
$user_id = $this->getContext()->user_id;
$user_profile = $this->getContext()->user_profile;
$title = ($user ? $user->getName() : 'User Not Found');
$description = ($user ? $user->getName() . '\'s user profile on BNETDocs' : 'The requested user does not exist or could not be found.');
$url = ($user ? $user->getURI() : Common::relativeUrlToAbsolute('/user/' . rawurlencode($user_id)));

if ($user)
{
  $this->opengraph->attach(new Pair('profile:username', $user->getName()));
  $this->opengraph->attach(new Pair('image', $user->getAvatarURI(null)));

  $user_created_dt = $user->getCreatedDateTime();
  $user_est = $user->getCreatedEstimate();
  $user_name = filter_var($user->getName(), FILTER_SANITIZE_FULL_SPECIAL_CHARS);
  $user_record_updated_dt = $user->getRecordUpdated();
  $user_verified_dt = $user->getVerifiedDateTime();
}

if ($user_profile)
{
  $biography = filter_var($user_profile->getBiography(), FILTER_SANITIZE_FULL_SPECIAL_CHARS);
  $discord_username = filter_var($user_profile->getDiscordUsername(), FILTER_SANITIZE_FULL_SPECIAL_CHARS);
  $facebook_uri = filter_var($user_profile->getFacebookURI(), FILTER_SANITIZE_FULL_SPECIAL_CHARS);
  $facebook_username = filter_var($user_profile->getFacebookUsername(), FILTER_SANITIZE_FULL_SPECIAL_CHARS);
  $github_uri = filter_var($user_profile->getGitHubURI(), FILTER_SANITIZE_FULL_SPECIAL_CHARS);
  $github_username = filter_var($user_profile->getGitHubUsername(), FILTER_SANITIZE_FULL_SPECIAL_CHARS);
  $instagram_uri = filter_var($user_profile->getInstagramURI(), FILTER_SANITIZE_FULL_SPECIAL_CHARS);
  $instagram_username = filter_var($user_profile->getInstagramUsername(), FILTER_SANITIZE_FULL_SPECIAL_CHARS);
  $phone = filter_var($user_profile->getPhone(), FILTER_SANITIZE_FULL_SPECIAL_CHARS);
  $phone_uri = filter_var($user_profile->getPhoneURI(), FILTER_SANITIZE_FULL_SPECIAL_CHARS);
  $reddit_uri = filter_var($user_profile->getRedditURI(), FILTER_SANITIZE_FULL_SPECIAL_CHARS);
  $reddit_username = filter_var($user_profile->getRedditUsername(), FILTER_SANITIZE_FULL_SPECIAL_CHARS);
  $skype_uri = filter_var($user_profile->getSkypeURI(), FILTER_SANITIZE_FULL_SPECIAL_CHARS);
  $skype_username = filter_var($user_profile->getSkypeUsername(), FILTER_SANITIZE_FULL_SPECIAL_CHARS);
  $steam_id = filter_var($user_profile->getSteamId(), FILTER_SANITIZE_FULL_SPECIAL_CHARS);
  $steam_uri = $user_profile->getSteamURI();
  $twitter_uri = filter_var($user_profile->getTwitterURI(), FILTER_SANITIZE_FULL_SPECIAL_CHARS);
  $twitter_username = filter_var($user_profile->getTwitterUsername(), FILTER_SANITIZE_FULL_SPECIAL_CHARS);
  $website = filter_var($user_profile->getWebsite(), FILTER_SANITIZE_FULL_SPECIAL_CHARS);
}

if (!empty($biography)) $description = $biography;

$this->opengraph->attach(new Pair('type', 'profile'));
$this->opengraph->attach(new Pair('url', $url));
require('./header.inc.phtml'); ?>
<div class="container">
  <span class="float-right">
<?  if ($active_user && $user && $active_user->getId() == $user->getId()) { ?>
    <a class="btn btn-sm btn-secondary" href="<?=Common::relativeUrlToAbsolute('/user/update')?>" title="Update Profile">üìù Update Profile</a>
    <a class="btn btn-sm btn-secondary" href="<?=Common::relativeUrlToAbsolute('/user/changepassword')?>" title="Change Password">üîë Change Password</a>
<?  } ?>
<?  if ($active_user && $user && $active_user->getOption(User::OPTION_ACL_USER_MODIFY)) { ?>
    <a class="btn btn-sm btn-secondary" href="<?=Common::relativeUrlToAbsolute('/user/update?id=' . rawurlencode($user->getId()))?>" title="Edit User">üìù</a>
<?  } ?>
    <a class="btn btn-sm btn-primary" href="https://facebook.com/sharer/sharer.php?u=<?=urlencode($url)?>" rel="external" data-popup="1"><img class="img-fluid" src="<?=Common::relativeUrlToAbsolute('/a/social-facebook-24px.png')?>"/></a>
    <a class="btn btn-sm btn-primary" href="https://twitter.com/share?text=<?=urlencode($title)?>&amp;url=<?=urlencode($url)?>" rel="external" data-popup="1"><img class="img-fluid" src="<?=Common::relativeUrlToAbsolute('/a/social-twitter-24px.png')?>"/></a>
  </span>
<? if ($user) { ?>
  <h1>User Profile</h1>
  <div class="row justify-content-md-center">
    <div class="col-sm-3 mb-2">
      <!-- Avatar -->

      <img class="rounded w-100" src="<?=$user->getAvatarURI(1024)?>" />
    </div>
    <div class="col-lg-4">
      <!-- User name, Biography -->

      <h2><?=$user_name?></h2>
      <p><?=(empty($biography) ? '<em>(no biography information)</em>' : $biography)?></p>
    </div>
    <div class="col-lg-5">
      <!-- Id, Timestamps -->

      <table class="table table-borderless table-sm">
        <thead></thead><tbody>
          <tr class="text-muted">
            <th scope="row" class="align-middle text-right">Id</th>
            <td><code><?=filter_var($user_id, FILTER_SANITIZE_FULL_SPECIAL_CHARS)?></code></td>
          </tr>
<? if ($active_user && $active_user->isStaff()) { ?>
          <tr class="text-success">
            <th scope="row" class="align-middle text-right">Date created</th>
            <td><time datetime="<?=$user_created_dt->format('c')?>"><?=$user_created_dt->format('D M j, Y')?></time></td>
          </tr>
          <tr class="text-<?=($user->isVerified() ? 'success' : 'danger')?>">
            <th scope="row" class="align-middle text-right">Date verified</th>
            <td><?=($user->isVerified() ? '<time datetime="' . $user_verified_dt->format('c') . '">' . $user_verified_dt->format('D M j, Y') . '</time>' : '<em>(not verified)</em>')?></td>
          </tr>
          <tr class="text-info">
            <th scope="row" class="align-middle text-right">Record last updated</th>
            <td><time datetime="<?=$user_record_updated_dt->format('c')?>"><?=$user_record_updated_dt->format('D M j, Y')?></time></td>
          </tr>
<? } ?>
          <tr class="text-muted"><th scope="row" class="align-middle text-right">Member for</th><td><?=$user_est?></td></tr>
          <tr class="text-muted"><th scope="row" class="align-middle text-right">Comments made</th><td><?=number_format($sum_comments)?></td></tr>
          <tr class="text-muted"><th scope="row" class="align-middle text-right">Documents authored</th><td><?=number_format($sum_documents)?></td></tr>
          <tr class="text-muted"><th scope="row" class="align-middle text-right">News posted</th><td><?=number_format($sum_news_posts)?></td></tr>
          <tr class="text-muted"><th scope="row" class="align-middle text-right">Packets authored</th><td><?=number_format($sum_packets)?></td></tr>
          <tr class="text-muted"><th scope="row" class="align-middle text-right">Servers owned</th><td><?=number_format($sum_servers)?></td></tr>
        </tbody>
      </table>

    </div>
  </div>
  <div class="row">
    <div class="col">
<?  if (isset($user_profile) && $user_profile)
{
      echo '<ul>';
      if (isset($discord_username) && !empty($discord_username))
      {
        echo '<li><strong>Discord:</strong> ' . $discord_username . '</li>' . PHP_EOL;
      }
      if (isset($github_username) && !empty($github_username))
      {
        echo '<li><strong>GitHub:</strong> <a rel="external" href="' . $github_uri . '">' . $github_username . '</a></li>' . PHP_EOL;
      }
      if (isset($reddit_username) && !empty($reddit_username))
      {
        echo '<li><strong>Reddit:</strong> <a rel="external" href="' . $reddit_uri . '">' . $reddit_username . '</a></li>' . PHP_EOL;
      }
      if (isset($steam_username) && !empty($steam_username))
      {
        echo '<li><strong>Steam:</strong> <a rel="external" href="' . $steam_uri . '">' . $steam_username . '</a></li>' . PHP_EOL;
      }
      if (isset($facebook_username) && !empty($facebook_username))
      {
        echo '<li><strong>Facebook:</strong> <a rel="external" href="' . $facebook_uri . '">' . $facebook_username . '</a></li>' . PHP_EOL;
      }
      if (isset($twitter_username) && !empty($twitter_username))
      {
        echo '<li><strong>Twitter:</strong> <a rel="external" href="' . $twitter_uri . '">' . $twitter_username . '</a></li>' . PHP_EOL;
      }
      if (isset($instagram_username) && !empty($instagram_username))
      {
        echo '<li><strong>Instagram:</strong> <a rel="external" href="' . $instagram_uri . '">' . $instagram_username . '</a></li>' . PHP_EOL;
      }
      if (isset($skype_username) && !empty($skype_username))
      {
        echo '<li><strong>Skype:</strong> <a href="' . $skype_uri . '">' . $skype_username . '</a></li>' . PHP_EOL;
      }
      if (isset($website) && !empty($website))
      {
        echo '<li><strong>Website:</strong> <a rel="external" href="' . $website . '">' . $website . '</a></li>' . PHP_EOL;
      }
      echo '</ul>';
    }?>
    </div>
  </div>
<? } else { ?>
  <div class="alert alert-danger">
    <h2><?=$title?></h2>
    <p class="mb-0"><?=$description?></p>
  </div>
<? } ?>
  <div class="row justify-content-center">
<? if (!empty($documents)) { ?>
    <div class="col-md-auto mb-3">
      <h3>Documents</h3>
      <ul>
<? foreach ($documents as $document) { ?>
        <li><a href="<?=$document->getURI()?>"><?=filter_var($document->getTitle(), FILTER_SANITIZE_FULL_SPECIAL_CHARS)?></a></li>
<? } ?>
      </ul>
    </div>
<? } ?>
<? if (!empty($news_posts)) { ?>
    <div class="col-md-auto mb-3">
      <h3>News Posts</h3>
      <ul>
<? foreach ($news_posts as $news_post) { ?>
        <li><a href="<?=$news_post->getURI()?>"><?=filter_var($news_post->getTitle(), FILTER_SANITIZE_FULL_SPECIAL_CHARS)?></a></li>
<? } ?>
      </ul>
    </div>
<? } ?>
<? if (!empty($packets)) { ?>
    <div class="col-md-auto mb-3">
      <h3>Packets</h3>
      <ul>
<? foreach ($packets as $packet) { ?>
        <li><a href="<?=$packet->getURI()?>"><?=filter_var($packet->getName(), FILTER_SANITIZE_FULL_SPECIAL_CHARS)?></a></li>
<? } ?>
      </ul>
    </div>
<? } ?>
<? if (!empty($servers)) { ?>
    <div class="col-md-auto mb-3">
      <h3>Servers</h3>
      <ul>
<? foreach ($servers as $server) { ?>
        <li><a href="<?=$server->getURI()?>"><?=filter_var($server->getName(), FILTER_SANITIZE_FULL_SPECIAL_CHARS)?></a></li>
<? } ?>
      </ul>
    </div>
<? } ?>
  </div>
<? if (!empty($comments)) {
    $comment_show_parent = true;
    require('./Comment/Section.inc.phtml');
  } ?>
</div>
<? require('./footer.inc.phtml'); ?>
