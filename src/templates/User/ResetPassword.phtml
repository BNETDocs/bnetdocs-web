<?php /* vim: set colorcolumn= expandtab shiftwidth=2 softtabstop=2 tabstop=4 smarttab: */
namespace BNETDocs\Templates\User;
use \BNETDocs\Models\User\ResetPassword as ResetPasswordModel;
use \CarlBennett\MVC\Libraries\Common;
use \CarlBennett\MVC\Libraries\Pair;
$title = 'Reset Password';
$description = 'Assists a user gain access to their account by resetting their password.';
$this->opengraph->attach(new Pair('url', '/user/resetpassword'));
$email = $this->getContext()->email;
$email_html = filter_var($email, FILTER_SANITIZE_FULL_SPECIAL_CHARS);
$error = $this->getContext()->error;
$token = $this->getContext()->token;
$token_html = filter_var($token, FILTER_SANITIZE_FULL_SPECIAL_CHARS);
switch ($error)
{
  case ResetPasswordModel::E_SUCCESS: $message = ''; break;
  case ResetPasswordModel::E_BAD_EMAIL: $message = 'The email address is invalid.'; break;
  case ResetPasswordModel::E_BAD_TOKEN: $message = 'The token is expired or invalid and therefore cannot be used.'; break;
  case ResetPasswordModel::E_EMPTY_EMAIL: $message = 'The email address was left blank.'; break;
  case ResetPasswordModel::E_INTERNAL_ERROR: $message = 'The server experienced an internal error.'; break;
  case ResetPasswordModel::E_PASSWORD_CONTAINS_EMAIL: $message = 'The password contains the email address, use a better password.'; break;
  case ResetPasswordModel::E_PASSWORD_CONTAINS_USERNAME: $message = 'The password contains the username, use a better password.'; break;
  case ResetPasswordModel::E_PASSWORD_MISMATCH: $message = 'The passwords did not match, please try again.'; break;
  case ResetPasswordModel::E_PASSWORD_TOO_LONG: $message = 'The password is too long, shorten it.'; break;
  case ResetPasswordModel::E_PASSWORD_TOO_SHORT: $message = 'The password is too short, use a better password.'; break;
  case ResetPasswordModel::E_USER_DISABLED: $message = 'The account has been administratively disabled.'; break;
  case ResetPasswordModel::E_USER_NOT_FOUND: $message = 'The email address was not found in our system.'; break;
  default: $message = $error;
}
require('./header.inc.phtml'); ?>
<div class="container">
<?=(!empty($message) ? sprintf('<div class="alert alert-danger"><p class="mb-0">%s</p></div>', $message) : '')?>
<? if ($error !== ResetPasswordModel::E_SUCCESS) { ?>
  <h1>Reset Password</h1>
  <form method="POST" action="?">
<? if (empty($token)) { ?>
    <div class="form-group">
      <label class="font-weight-bold" for="email">Email address:</label>
      <input class="bg-dark border border-primary form-control text-light" type="email" name="email" id="email" placeholder="Enter the email address here" value="<?=$email?>" tabindex="1" required autocomplete="email" autofocus="autofocus"/>
    </div>
    <div class="form-group">
      <input class="btn btn-success" type="submit" value="Reset Password" tabindex="2"/>
    </div>
<? } else { ?>
    <input type="hidden" name="email" value="<?=$email_html?>"/>
    <input type="hidden" name="t" value="<?=$token_html?>"/>
    <div class="form-group">
      <label class="font-weight-bold" for="email">Email address:</label><br/>
      <p class="border border-primary p-2"><?=$email_html?></p>
    </div>
    <div class="form-group">
      <label class="font-weight-bold" for="pw1">New password:</label><br/>
      <input class="bg-dark border border-primary form-control text-light" type="password" name="pw1" id="pw1" placeholder="Enter the new password here" value="" tabindex="2" required autocomplete="new-password" autofocus="autofocus"/>
    </div>
    <div class="form-group">
      <label class="font-weight-bold" for="pw2">Confirm password:</label><br/>
      <input class="bg-dark border border-primary form-control text-light" type="password" name="pw2" id="pw2" placeholder="Confirm the new password here" value="" tabindex="3" required autocomplete="new-password"/>
    </div>
    <div class="form-group">
      <input class="btn btn-success" type="submit" value="Change Password" tabindex="4"/>
    </div>
<? } ?>
  </form>
<? } else if ($error === ResetPasswordModel::E_SUCCESS && !empty($email) && empty($token)) { ?>
  <h1 class="text-success">Email Sent</h1>
  <div class="alert alert-success">
    <p class="mb-0">An email has been sent with a link to reset the password.</p>
  </div>
<? } else if ($error === ResetPasswordModel::E_SUCCESS && !empty($email) && !empty($token)) { ?>
  <h1 class="text-success">Password Changed</h1>
  <div class="alert alert-success">
    <p class="mb-0">Your password has been changed, you may now log in.</p>
  </div>
<? } ?>
</div>
<? require('./footer.inc.phtml'); ?>
